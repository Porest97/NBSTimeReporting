// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NBSTimeReporting.Data;

namespace NBSTimeReporting.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200306132739_DoubleToDecimalWLHours")]
    partial class DoubleToDecimalWLHours
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("NBSTimeReporting.Assets.DataModels.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetBrandId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Connectivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ethernet1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ethernet1LLDP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MACAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssetBrandId");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("SiteId");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("NBSTimeReporting.Assets.DataModels.AssetBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetBrandName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssetBrand");
                });

            modelBuilder.Entity("NBSTimeReporting.Assets.DataModels.AssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssetType");
                });

            modelBuilder.Entity("NBSTimeReporting.DWorkin.Regus.DataModels.RegusTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FEEExitsSite")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FEEntersSite")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FEScheduled")
                        .HasColumnType("datetime2");

                    b.Property<string>("IncidentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IssueResolved")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId1")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Received")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegusTicketNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketPriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("WLHours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WLNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("PersonId1");

                    b.HasIndex("PersonId2");

                    b.HasIndex("SiteId");

                    b.HasIndex("TicketPriorityId");

                    b.HasIndex("TicketStatusId");

                    b.HasIndex("TicketTypeId");

                    b.ToTable("RegusTicket");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.AccountingModels.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.AccountingModels.EmployeeAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AccountStatusId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeAccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountStatusId");

                    b.HasIndex("PersonId");

                    b.ToTable("EmployeeAccount");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.AccountingModels.MonthlyTimeReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Month")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalTimeWorked")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WeeklyTimeReportId")
                        .HasColumnType("int");

                    b.Property<int?>("WeeklyTimeReportId1")
                        .HasColumnType("int");

                    b.Property<int?>("WeeklyTimeReportId2")
                        .HasColumnType("int");

                    b.Property<int?>("WeeklyTimeReportId3")
                        .HasColumnType("int");

                    b.Property<int?>("WeeklyTimeReportId4")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReportStatusId");

                    b.HasIndex("WeeklyTimeReportId");

                    b.HasIndex("WeeklyTimeReportId1");

                    b.HasIndex("WeeklyTimeReportId2");

                    b.HasIndex("WeeklyTimeReportId3");

                    b.HasIndex("WeeklyTimeReportId4");

                    b.ToTable("MonthlyTimeReport");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.AccountingModels.SallaryReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountPayed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DueToPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Month")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Payed")
                        .HasColumnType("bit");

                    b.Property<decimal>("PaymentPerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("ReportStatusId")
                        .HasColumnType("int");

                    b.Property<decimal>("TimeWorked")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPayment")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("ReportStatusId");

                    b.ToTable("SallaryReport");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.AccountingModels.Transaction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AccountId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.AccountingModels.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TransactionTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TransactionType");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.AccountingModels.WeeklyTimeReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Day1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Day1Ended")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Day1Started")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Day2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Day2Ended")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Day2Started")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Day3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Day3Ended")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Day3Started")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Day4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Day4Ended")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Day4Started")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Day5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Day5Ended")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Day5Started")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Day6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Day6Ended")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Day6Started")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Day7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Day7Ended")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Day7Started")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("ReportStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WeekNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WorkedDay1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WorkedDay2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WorkedDay3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WorkedDay4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WorkedDay5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WorkedDay6")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WorkedDay7")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WorkedHoursTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("ReportStatusId");

                    b.ToTable("WeeklyTimeReport");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.DataModels.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyRoleId");

                    b.HasIndex("CompanyStatusId");

                    b.HasIndex("CompanyTypeId");

                    b.HasIndex("PersonId")
                        .IsUnique()
                        .HasFilter("[PersonId] IS NOT NULL");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.DataModels.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ssn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SwishNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PersonRoleId");

                    b.HasIndex("PersonStatusId");

                    b.HasIndex("PersonTypeId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.DataModels.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimeEnded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeStarted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("ReportStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ReportTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.Property<decimal>("WorkHours")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("ReportStatusId");

                    b.HasIndex("ReportTypeId");

                    b.HasIndex("SiteId");

                    b.HasIndex("TicketId");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.DataModels.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfFloors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId1")
                        .HasColumnType("int");

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SiteRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("SiteStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("SiteTypeId")
                        .HasColumnType("int");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PersonId");

                    b.HasIndex("PersonId1");

                    b.HasIndex("SiteRoleId");

                    b.HasIndex("SiteStatusId");

                    b.HasIndex("SiteTypeId");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.DataModels.Survey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("APBrandModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("APFloorMap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetSpotReport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfAPs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpeedTestIMG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SurveyEnded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SurveyStarted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SurveyStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("SurveyTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SurveyStatusId");

                    b.HasIndex("SurveyTypeId");

                    b.HasIndex("TicketId");

                    b.ToTable("Survey");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.DataModels.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FEEExitsSite")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FEEntersSite")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FEScheduled")
                        .HasColumnType("datetime2");

                    b.Property<string>("IncidentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IssueResolved")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId1")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Received")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketPriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("PersonId1");

                    b.HasIndex("PersonId2");

                    b.HasIndex("SiteId");

                    b.HasIndex("TicketPriorityId");

                    b.HasIndex("TicketStatusId");

                    b.HasIndex("TicketTypeId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.PlanningModels.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ActivityStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ActivityTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Duration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FromDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ToDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActivityStatusId");

                    b.HasIndex("ActivityTypeId");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.PlanningModels.ActivityStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActivityStatus");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.PlanningModels.ActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActivityType");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.SettingModels.AccountStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountStatus");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.SettingModels.CompanyRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyRoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyRole");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.SettingModels.CompanyStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyStatus");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.SettingModels.CompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyType");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.SettingModels.PersonRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PersonRoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonRole");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.SettingModels.PersonStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PersonStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonStatus");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.SettingModels.PersonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PersonTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonType");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.SettingModels.ReportStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReportStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReportStatus");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.SettingModels.ReportType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReportTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReportType");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.SettingModels.SiteRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SiteRoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SiteRole");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.SettingModels.SiteStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SiteStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SiteStatus");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.SettingModels.SiteType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SiteTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SiteType");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.SettingModels.SurveyStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SurveyStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SurveyStatus");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.SettingModels.SurveyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SurveyTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SurveyType");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.SettingModels.TicketPriority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TicketPriorityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TicketPriority");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.SettingModels.TicketStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TicketStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TicketStatus");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.SettingModels.TicketType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TicketTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TicketType");
                });

            modelBuilder.Entity("NBSTimeReporting.Offering.DataModels.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateTimeOffered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimeScheduledEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimeScheduledStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HoursOnSite")
                        .HasColumnType("float");

                    b.Property<double>("KostHours")
                        .HasColumnType("float");

                    b.Property<double>("KostMtrl")
                        .HasColumnType("float");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<double>("PricePerHour")
                        .HasColumnType("float");

                    b.Property<double>("Riskfaktor")
                        .HasColumnType("float");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int");

                    b.Property<string>("TicketNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalOfferAmount")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("SiteId");

                    b.ToTable("Offer");
                });

            modelBuilder.Entity("NBSTimeReporting.TimeReportingExternal.DataModels.TimeReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("FeeHour")
                        .HasColumnType("float");

                    b.Property<string>("IncidentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShiftEnded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShiftStarted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int");

                    b.Property<double>("TotalFee")
                        .HasColumnType("float");

                    b.Property<double>("WorkedHours")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.ToTable("TimeReport");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NBSTimeReporting.Assets.DataModels.Asset", b =>
                {
                    b.HasOne("NBSTimeReporting.Assets.DataModels.AssetBrand", "AssetBrand")
                        .WithMany()
                        .HasForeignKey("AssetBrandId");

                    b.HasOne("NBSTimeReporting.Assets.DataModels.AssetType", "AssetType")
                        .WithMany()
                        .HasForeignKey("AssetTypeId");

                    b.HasOne("NBSTimeReporting.Models.DataModels.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");
                });

            modelBuilder.Entity("NBSTimeReporting.DWorkin.Regus.DataModels.RegusTicket", b =>
                {
                    b.HasOne("NBSTimeReporting.Models.DataModels.Person", "Creator")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("NBSTimeReporting.Models.DataModels.Person", "Receiver")
                        .WithMany()
                        .HasForeignKey("PersonId1");

                    b.HasOne("NBSTimeReporting.Models.DataModels.Person", "FEAssigned")
                        .WithMany()
                        .HasForeignKey("PersonId2");

                    b.HasOne("NBSTimeReporting.Models.DataModels.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");

                    b.HasOne("NBSTimeReporting.Models.SettingModels.TicketPriority", "TicketPriority")
                        .WithMany()
                        .HasForeignKey("TicketPriorityId");

                    b.HasOne("NBSTimeReporting.Models.SettingModels.TicketStatus", "TicketStatus")
                        .WithMany()
                        .HasForeignKey("TicketStatusId");

                    b.HasOne("NBSTimeReporting.Models.SettingModels.TicketType", "TicketType")
                        .WithMany()
                        .HasForeignKey("TicketTypeId");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.AccountingModels.EmployeeAccount", b =>
                {
                    b.HasOne("NBSTimeReporting.Models.SettingModels.AccountStatus", "AccountStatus")
                        .WithMany()
                        .HasForeignKey("AccountStatusId");

                    b.HasOne("NBSTimeReporting.Models.DataModels.Person", "Employee")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.AccountingModels.MonthlyTimeReport", b =>
                {
                    b.HasOne("NBSTimeReporting.Models.SettingModels.ReportStatus", "ReportStatus")
                        .WithMany()
                        .HasForeignKey("ReportStatusId");

                    b.HasOne("NBSTimeReporting.Models.AccountingModels.WeeklyTimeReport", "WTR1")
                        .WithMany()
                        .HasForeignKey("WeeklyTimeReportId");

                    b.HasOne("NBSTimeReporting.Models.AccountingModels.WeeklyTimeReport", "WTR2")
                        .WithMany()
                        .HasForeignKey("WeeklyTimeReportId1");

                    b.HasOne("NBSTimeReporting.Models.AccountingModels.WeeklyTimeReport", "WTR3")
                        .WithMany()
                        .HasForeignKey("WeeklyTimeReportId2");

                    b.HasOne("NBSTimeReporting.Models.AccountingModels.WeeklyTimeReport", "WTR4")
                        .WithMany()
                        .HasForeignKey("WeeklyTimeReportId3");

                    b.HasOne("NBSTimeReporting.Models.AccountingModels.WeeklyTimeReport", "WTR5")
                        .WithMany()
                        .HasForeignKey("WeeklyTimeReportId4");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.AccountingModels.SallaryReport", b =>
                {
                    b.HasOne("NBSTimeReporting.Models.DataModels.Person", "Employee")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("NBSTimeReporting.Models.SettingModels.ReportStatus", "ReportStatus")
                        .WithMany()
                        .HasForeignKey("ReportStatusId");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.AccountingModels.Transaction", b =>
                {
                    b.HasOne("NBSTimeReporting.Models.AccountingModels.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NBSTimeReporting.Models.AccountingModels.TransactionType", "TransactionType")
                        .WithMany()
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NBSTimeReporting.Models.AccountingModels.WeeklyTimeReport", b =>
                {
                    b.HasOne("NBSTimeReporting.Models.DataModels.Person", "Emloyee")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("NBSTimeReporting.Models.SettingModels.ReportStatus", "ReportStatus")
                        .WithMany()
                        .HasForeignKey("ReportStatusId");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.DataModels.Company", b =>
                {
                    b.HasOne("NBSTimeReporting.Models.SettingModels.CompanyRole", "CompanyRole")
                        .WithMany()
                        .HasForeignKey("CompanyRoleId");

                    b.HasOne("NBSTimeReporting.Models.SettingModels.CompanyStatus", "CompanyStatus")
                        .WithMany()
                        .HasForeignKey("CompanyStatusId");

                    b.HasOne("NBSTimeReporting.Models.SettingModels.CompanyType", "CompanyType")
                        .WithMany()
                        .HasForeignKey("CompanyTypeId");

                    b.HasOne("NBSTimeReporting.Models.DataModels.Person", "CompanyContact")
                        .WithOne()
                        .HasForeignKey("NBSTimeReporting.Models.DataModels.Company", "PersonId");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.DataModels.Person", b =>
                {
                    b.HasOne("NBSTimeReporting.Models.DataModels.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("NBSTimeReporting.Models.SettingModels.PersonRole", "PersonRole")
                        .WithMany()
                        .HasForeignKey("PersonRoleId");

                    b.HasOne("NBSTimeReporting.Models.SettingModels.PersonStatus", "PersonStatus")
                        .WithMany()
                        .HasForeignKey("PersonStatusId");

                    b.HasOne("NBSTimeReporting.Models.SettingModels.PersonType", "PersonType")
                        .WithMany()
                        .HasForeignKey("PersonTypeId");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.DataModels.Report", b =>
                {
                    b.HasOne("NBSTimeReporting.Models.DataModels.Person", "Employee")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("NBSTimeReporting.Models.SettingModels.ReportStatus", "ReportStatus")
                        .WithMany()
                        .HasForeignKey("ReportStatusId");

                    b.HasOne("NBSTimeReporting.Models.SettingModels.ReportType", "ReportType")
                        .WithMany()
                        .HasForeignKey("ReportTypeId");

                    b.HasOne("NBSTimeReporting.Models.DataModels.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");

                    b.HasOne("NBSTimeReporting.Models.DataModels.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.DataModels.Site", b =>
                {
                    b.HasOne("NBSTimeReporting.Models.DataModels.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("NBSTimeReporting.Models.DataModels.Person", "Contact1")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("NBSTimeReporting.Models.DataModels.Person", "Contact2")
                        .WithMany()
                        .HasForeignKey("PersonId1");

                    b.HasOne("NBSTimeReporting.Models.SettingModels.SiteRole", "SiteRole")
                        .WithMany()
                        .HasForeignKey("SiteRoleId");

                    b.HasOne("NBSTimeReporting.Models.SettingModels.SiteStatus", "SiteStatus")
                        .WithMany()
                        .HasForeignKey("SiteStatusId");

                    b.HasOne("NBSTimeReporting.Models.SettingModels.SiteType", "SiteType")
                        .WithMany()
                        .HasForeignKey("SiteTypeId");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.DataModels.Survey", b =>
                {
                    b.HasOne("NBSTimeReporting.Models.SettingModels.SurveyStatus", "SurveyStatus")
                        .WithMany()
                        .HasForeignKey("SurveyStatusId");

                    b.HasOne("NBSTimeReporting.Models.SettingModels.SurveyType", "SurveyType")
                        .WithMany()
                        .HasForeignKey("SurveyTypeId");

                    b.HasOne("NBSTimeReporting.Models.DataModels.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.DataModels.Ticket", b =>
                {
                    b.HasOne("NBSTimeReporting.Models.DataModels.Person", "Creator")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("NBSTimeReporting.Models.DataModels.Person", "Receiver")
                        .WithMany()
                        .HasForeignKey("PersonId1");

                    b.HasOne("NBSTimeReporting.Models.DataModels.Person", "FEAssigned")
                        .WithMany()
                        .HasForeignKey("PersonId2");

                    b.HasOne("NBSTimeReporting.Models.DataModels.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");

                    b.HasOne("NBSTimeReporting.Models.SettingModels.TicketPriority", "TicketPriority")
                        .WithMany()
                        .HasForeignKey("TicketPriorityId");

                    b.HasOne("NBSTimeReporting.Models.SettingModels.TicketStatus", "TicketStatus")
                        .WithMany()
                        .HasForeignKey("TicketStatusId");

                    b.HasOne("NBSTimeReporting.Models.SettingModels.TicketType", "TicketType")
                        .WithMany()
                        .HasForeignKey("TicketTypeId");
                });

            modelBuilder.Entity("NBSTimeReporting.Models.PlanningModels.Activity", b =>
                {
                    b.HasOne("NBSTimeReporting.Models.PlanningModels.ActivityStatus", "ActivityStatus")
                        .WithMany()
                        .HasForeignKey("ActivityStatusId");

                    b.HasOne("NBSTimeReporting.Models.PlanningModels.ActivityType", "ActivityType")
                        .WithMany()
                        .HasForeignKey("ActivityTypeId");
                });

            modelBuilder.Entity("NBSTimeReporting.Offering.DataModels.Offer", b =>
                {
                    b.HasOne("NBSTimeReporting.Models.DataModels.Person", "Employee")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("NBSTimeReporting.Models.DataModels.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");
                });

            modelBuilder.Entity("NBSTimeReporting.TimeReportingExternal.DataModels.TimeReport", b =>
                {
                    b.HasOne("NBSTimeReporting.Models.DataModels.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");
                });
#pragma warning restore 612, 618
        }
    }
}
